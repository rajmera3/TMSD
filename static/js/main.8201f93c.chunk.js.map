{"version":3,"sources":["icons/icon-package.svg","Database.js","TermPage.js","ScrollToTop.js","Pagination.js","Results.js","Search.js","Totals.js","MainPage.js","Directory.js","AdminPage.js","AdminLogin.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","projectId","DatabaseClient","Object","classCallCheck","this","collection","firestore","newCollection","query","queryMatches","toLowerCase","where","get","forEach","docSnapshot","doc","data","name","unshift","push","snapshot","docs","map","id","raw","matchesArr","snippet","pattern","RegExp","exec","replace","page","pageSize","_this","getQueryMatches","then","results","result","createSnippet","description","info","meta","current","size","total_pages","Math","ceil","length","total_results","createDatabaseClient","databaseClient","ReactChartkick","addAdapter","Chart","TermPage","props","possibleConstructorReturn","getPrototypeOf","call","state","title","_this2","term","decodeURI","window","location","href","split","toLocaleLowerCase","console","log","exists","setState","dates","first_occurance","catch","err","react_default","a","createElement","style","styles","header","headerText","className","graph","react_chartkick_esm","height","colors","definition","defText","React","Component","width","margin","marginTop","textAlign","marginBottom","color","ScrollToTop","prevProps","scrollTo","top","behavior","children","withRouter","limitedTo100Pages","totalResults","min","Pagination","_ref","currentPage","totalPages","onPage","es","total","onChange","Description","value","Array","isArray","dangerouslySetInnerHTML","createMarkup","html","__html","getRaw","field","getSnippet","Results","_ref2","queryState","trackClick","key","JSON","stringify","rel","FILTERS_WHITELIST","Search","facets","filters","pageState","requestId","updateQuery","history","queryString","q","updatePage","newPage","objectSpread","getQueryState","updateFromQueryState","_this$getQueryState","reduce","acc","filterName","filterValue","concat","defineProperty","parseInt","isNaN","updateResults","debounce","_ref$page","search","resultList","error","curriedTrackClick","documentId","parse","_this$state","queryClass","searchActions","searchResults","Totals","start","end","MainPage","isSuccessful","showPopup","changeCollection","newTerm","document","getElementById","termAdded","alert","set","adminButton","align","src_ScrollToTop","Route","Search_Search","src","packageIcon","alt","placeholder","e","target","type","assign","reactjs_popup_es","position","trigger","modal","close","onClick","requestNewTerm","float","Directory","TermList","listItems","allTerms","getAllTerms","divStyle","options","AdminPage","addToDb","termsRaw","selectedOption","termsToAdd","i","termsJson","new-terms","http","XMLHttpRequest","open","setRequestHeader","send","onreadystatechange","responseText","deleteRequests","isUserLoggedIn","asyncToGenerator","regenerator_default","mark","_callee","user","wrap","_context","prev","next","checkLoginStatus","sent","t0","stop","updateOptions","promiseRequestedTerms","listofTerms","terms","newEntry","label","handleChange","termsToDelete","delete","isLoggedIn","auth","onAuthStateChanged","bind","Promise","resolve","reject","signOut","logout","requests","react_select_esm","isMulti","closeMenuOnSelect","AdminLogin","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","EMAIL_LINK_SIGN_IN_METHOD","signInSuccessUrl","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","StyledFirebaseAuth_default","firebaseAuth","App","redirect","HashRouter","basename","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.8201f93c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-package.c87221ed.svg\";","import firebase from \"firebase\";\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyDiY0fyje5FeDMqbsdEhAkHM52GHHPGM4o\",\n  authDomain: \"tmsd-577fd.firebaseapp.com\",\n  databaseURL: \"https://tmsd-577fd.firebaseio.com\",\n  storageBucket: \"tmsd-577fd.appspot.com\",\n  projectId: \"tmsd-577fd\"\n};\nfirebase.initializeApp(config);\n\nclass DatabaseClient {\n  constructor() {\n    this.collection = firebase.firestore().collection(\"data\");\n  }\n\n  changeCollection(newCollection) {\n    this.collection = firebase.firestore().collection(newCollection);\n  }\n\n  async getQueryMatches(query) {\n    var queryMatches = [];\n\n    query = query.toLowerCase();\n    // let collection = firebase.firestore().collection(\"data\");\n\n    // search query in related words field\n    let querySnapshot = await this.collection\n      .where(\"related_terms\", \"array-contains\", query)\n      .get();\n\n    querySnapshot.forEach(docSnapshot => {\n      let doc = docSnapshot.data();\n      if (doc.name.toLowerCase() == query) {\n        // if name matches query, put first\n        queryMatches.unshift(doc);\n      } else {\n        queryMatches.push(doc);\n      }\n    });\n\n    return queryMatches;\n  }\n\n  async getAllTerms() {\n    // returns list of strings (each string is a term)\n    const snapshot = await this.collection.get();\n    return snapshot.docs.map(doc => doc.id);\n  }\n\n  createSnippet(raw, query) {\n    var snippet = raw;\n    var pattern = new RegExp(query, \"gi\");\n    var matchesArr;\n    while ((matchesArr = pattern.exec(raw)) !== null) {\n      snippet = snippet.replace(\n        matchesArr[0],\n        \"<em>\" + matchesArr[0] + \"</em>\"\n      );\n    }\n    // var snippet = raw.replace(query, \"<em>\" + query + \"</em>\");\n    return snippet;\n  }\n\n  search(query, page, pageSize) {\n    return this.getQueryMatches(query).then(queryMatches => {\n      var results = [];\n      queryMatches.forEach(result => {\n        results.push({\n          data: {\n            name: {\n              raw: result.name,\n              snippet: this.createSnippet(result.name, query)\n            },\n            description: {\n              snippet: this.createSnippet(result.description, query)\n            }\n          }\n        });\n      });\n\n      let pageState = {\n        info: {\n          meta: {\n            page: {\n              current: page,\n              size: pageSize,\n              total_pages: Math.ceil(queryMatches.length / pageSize),\n              total_results: queryMatches.length\n            }\n          }\n        },\n        results: results\n      };\n      return pageState;\n    });\n  }\n}\n\nlet createDatabaseClient = () => {\n  return new DatabaseClient();\n};\n\nexport default createDatabaseClient;\n","import React from \"react\";\n\nimport ReactChartkick, { LineChart } from \"react-chartkick\";\nimport Chart from \"chart.js\";\nimport createDatabaseClient from \"./Database\";\n\nconst databaseClient = createDatabaseClient();\n\nReactChartkick.addAdapter(Chart);\n\nclass TermPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \" \" };\n  }\n\n  componentWillMount() {\n    var currentLocation = decodeURI(window.location.href);\n    var term = currentLocation.split(/\"/)[1].toLocaleLowerCase();\n    console.log(term);\n\n    var alien = databaseClient.collection\n      .doc(term)\n      .get()\n      .then(doc => {\n        if (!doc.exists) {\n          console.log(\"No such document!\");\n        } else {\n          // console.log(\"Document data:\", doc.data());\n          // console.log(\"Document name: \" + doc.data().name);\n\n          this.setState({\n            name: doc.data().name,\n            dates: doc.data().dates,\n            description: doc.data().description,\n            first_occurance: doc.data().first_occurance\n          });\n        }\n      })\n      .catch(err => {\n        console.log(\"Error getting document\", err);\n      });\n\n    // console.log(alien);\n  }\n\n  render() {\n    console.log(this.state.dates)\n    return (\n      <div>\n        <div style={styles.header}>\n          <h1 style={styles.headerText} className=\"term-title\">\n            {\" \"}\n            {this.state.name}{\" \"}\n          </h1>\n          <hr />\n        </div>\n\n        <div style={styles.graph} className=\"graph\">\n          <LineChart\n            height=\"42vh\"\n            data={this.state.dates}\n            colors={[\"#3899E8\", \"#F55452\", \"9831FF\"]}\n          />\n        </div>\n\n        <div style={styles.definition} className=\"graph\">\n          <p style={styles.defText}>\n            {\" \"}\n            <strong>Definition:</strong> {this.state.description}\n          </p>\n          <p style={styles.defText}>\n            {\" \"}\n            <strong>First Occurance:</strong> {this.state.first_occurance}\n          </p>\n          <p style={styles.defText}>\n            {\" \"}\n            <strong>Data Sources:</strong> Pubmed for Academia\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  header: {\n    width: \"75vw\",\n    margin: \"auto\",\n    marginTop: \"2%\",\n    textAlign: \"center\"\n  },\n  headerText: {\n    textAlign: \"center\"\n  },\n  graph: {\n    width: \"90vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\"\n  },\n  definition: {\n    width: \"60vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\",\n    marginBottom: \"40px\"\n  },\n  defText: {\n    textAlign: \"left\",\n    color: \"black\"\n  }\n};\n\nexport default TermPage;\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from \"react\";\nimport RCPagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\n\n// App search is currently limited to 100 pages, so we need to make sure\n// that our pager only shows up to 100 pages.\nfunction limitedTo100Pages(totalResults, pageSize) {\n  return Math.min(pageSize * 100, totalResults);\n}\n\nexport default function Pagination({\n  currentPage,\n  pageSize,\n  totalPages,\n  totalResults,\n  onPage\n}) {\n  return (\n    <div className=\"container\">\n      <RCPagination\n        pageSize={pageSize}\n        current={currentPage}\n        total={limitedTo100Pages(totalResults, pageSize)}\n        onChange={onPage}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Description({ value, children }) {\n  if (!value) return null;\n  if (Array.isArray(value) && !value.length) return null;\n  return (\n    <p\n      className=\"result__description\"\n      dangerouslySetInnerHTML={createMarkup(value)}\n    />\n  );\n}\n\nfunction createMarkup(html) {\n  return { __html: html };\n}\n\nfunction getRaw(result, field) {\n  return (result.data[field] || {}).raw;\n}\n\nfunction getSnippet(result, field) {\n  return (result.data[field] || {}).snippet;\n}\n\nexport default function Results({ results, queryState, trackClick }) {\n  return (\n    <ul>\n      {results.map(result => (\n        <li className=\"result\" key={getRaw(result, \"name\")}>\n          <div className=\"result__header\">\n            <a\n              className=\"result__title\"\n              href={\n                \"/TMSD/#/v=\" +\n                JSON.stringify(getRaw(result, \"name\").toLowerCase())\n              }\n              rel=\"noopener noreferrer\"\n              dangerouslySetInnerHTML={createMarkup(getSnippet(result, \"name\"))}\n            />\n          </div>\n\n          <div className=\"result__body\">\n            <Description value={getSnippet(result, \"description\")} />\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { Component } from \"react\";\nimport { debounce } from \"lodash\";\nimport queryString from \"query-string\";\nimport createDatabaseClient from \"./Database\";\n\nconst databaseClient = createDatabaseClient();\n\nconst FILTERS_WHITELIST = [\"dependencies\", \"license\", \"keywords\"];\n\nfunction getFiltersFromQueryState(queryState) {\n  return FILTERS_WHITELIST.reduce((acc, filterName) => {\n    const filterValue = queryState[filterName];\n    if (!filterValue) return acc;\n    return acc.concat({ [filterName]: filterValue });\n  }, []);\n}\n\n/*\n  A simple abstraction to centralize all App Search logic in one place. This uses the\n  Render Props pattern (https://reactjs.org/docs/render-props.html) and hence makes no assumption\n  about your view, it simply passes down handlers and data to the app.\n\n  In your React app, you may choose to use something like Redux or Mobx to achieve this centralization,\n  but for simplicity in this Demo, we've chosen to simply keep this in a top-level component.\n*/\nexport default class Search extends Component {\n  state = {\n    facets: {},\n    filters: {},\n    pageState: {\n      currentPage: 0,\n      pageSize: 0,\n      totalPages: 0,\n      totalResults: 0\n    },\n    query: \"\",\n    requestId: \"\",\n    results: []\n  };\n\n  updateQuery = query => {\n    const { history } = this.props;\n    history.push(\"?\" + queryString.stringify({ q: query }));\n  };\n\n  updatePage = newPage => {\n    const { history } = this.props;\n    history.push(\n      \"?\" + queryString.stringify({ ...this.getQueryState(), page: newPage })\n    );\n  };\n\n  updateFromQueryState = () => {\n    let { q, page } = this.getQueryState();\n    const filters = getFiltersFromQueryState(this.getQueryState());\n    q = q || \"\";\n    page = parseInt(page, 10);\n    page = isNaN(page) ? 1 : page;\n    this.updateResults({ query: q, page: parseInt(page, 10), filters });\n  };\n\n  updateResults = debounce(({ query, page = 1, filters }) => {\n    databaseClient.search(query, page, 10).then(\n      resultList => {\n        // console.log(resultList);\n        this.setState({\n          pageState: {\n            currentPage: resultList.info.meta.page.current,\n            pageSize: resultList.info.meta.page.size,\n            totalPages: resultList.info.meta.page.total_pages,\n            totalResults: resultList.info.meta.page.total_results\n          },\n          query: query,\n          results: resultList.results\n        });\n      },\n      error => {\n        console.log(`error: ${error}`);\n      }\n    );\n  }, 200);\n\n  // This is so that we don't have to pass `requestId` and `query` deep down\n  // the tree.\n  curriedTrackClick = (query, requestId) => documentId => {\n    // this.trackClick({ query, requestId, documentId });\n  };\n\n  getQueryState = () => queryString.parse(this.props.location.search);\n\n  componentDidMount() {\n    this.updateFromQueryState();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.updateFromQueryState();\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const {\n      facets,\n      filters,\n      pageState,\n      query,\n      requestId,\n      results\n    } = this.state;\n    const { q } = this.getQueryState();\n    const queryClass = query ? \"active-search\" : \"\";\n\n    return children({\n      query: q,\n      queryState: this.getQueryState(),\n      queryClass: queryClass,\n      searchActions: {\n        trackClick: this.curriedTrackClick(query, requestId),\n        updatePage: this.updatePage,\n        updateQuery: this.updateQuery\n      },\n      searchResults: {\n        facets,\n        filters,\n        pageState,\n        query,\n        requestId,\n        results\n      }\n    });\n  }\n}\n","import React from \"react\";\n\nexport default function Totals({ currentPage, pageSize, totalResults }) {\n  const start = totalResults === 0 ? 0 : (currentPage - 1) * pageSize + 1;\n  const end = totalResults <= pageSize ? totalResults : start + pageSize - 1;\n\n  return (\n    <div className=\"results__result-count\">\n      Showing{\" \"}\n      <strong>\n        {start} - {end}\n      </strong>{\" \"}\n      of <strong>{totalResults}</strong>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\n\nimport ScrollToTop from \"./ScrollToTop\";\nimport Pagination from \"./Pagination\";\nimport Results from \"./Results\";\nimport Search from \"./Search\";\nimport Totals from \"./Totals\";\n\nimport packageIcon from \"./icons/icon-package.svg\";\nimport createDatabaseClient from \"./Database\";\n\nconst databaseClient = createDatabaseClient();\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \" \", isSuccessful: false };\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  componentWillMount() {}\n\n  async requestNewTerm() {\n    databaseClient.changeCollection(\"requestedTerms\");\n    // event.preventDefault();\n\n    var newTerm = document.getElementById(\"requestedTerm\").value;\n    newTerm = newTerm.toLowerCase();\n    var termAdded = false;\n    if (newTerm == \"\") {\n      alert(\"Please provide a term\");\n    } else {\n      await databaseClient.collection\n        .doc(newTerm)\n        .set({})\n        .then(function() {\n          console.log(\"Document successfully written!\");\n          termAdded = true;\n          console.log(termAdded);\n        })\n        .catch(function(error) {\n          console.error(\"Error writing document: \", error);\n          termAdded = false;\n        });\n\n      console.log(termAdded);\n      this.setState({\n        isSuccessful: termAdded\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <a\n          className=\"btn btn-ghostLogin\"\n          href=\"/TMSD/#/adminLogin\"\n          style={styles.adminButton}\n        >\n          {\" \"}\n          Admin Login{\" \"}\n        </a>\n        <div align=\"center\">\n          <ScrollToTop>\n            <Route>\n              {({ location, history }) => (\n                <Search location={location} history={history}>\n                  {({\n                    query,\n                    queryState,\n                    queryClass,\n                    searchActions,\n                    searchResults\n                  }) => (\n                    <div>\n                      <div className={`tmsd live-filtering ${queryClass}`}>\n                        <div className=\"tmsd__content\">\n                          <div className=\"tmsd__header\">\n                            <div className=\"tmsd__headings\">\n                              <div className=\"tmsd__icon-wrap\">\n                                <img\n                                  src={packageIcon}\n                                  alt=\"Dinosaur Icon\"\n                                  className=\"tmsd__icon\"\n                                />\n                              </div>\n                              <h1 className=\"tmsd__title\">\n                                Time Machine Space Dinosaur\n                              </h1>\n                            </div>\n                            <div className=\"tmsd__input-wrapper\">\n                              <input\n                                className=\"tmsd__text-input\"\n                                placeholder=\"Search science fiction term or author&#8230;\"\n                                value={query}\n                                onChange={e =>\n                                  searchActions.updateQuery(e.target.value)\n                                }\n                              />\n                              <input\n                                type=\"submit\"\n                                value=\"Search\"\n                                className=\"button tmsd__submit\"\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"tmsd__body\">\n                            <div className=\"search-results\">\n                              <div className=\"results\">\n                                <div className=\"results__header\">\n                                  <Totals {...searchResults.pageState} />\n                                </div>\n                                <div className=\"results__body\">\n                                  <Results\n                                    results={searchResults.results}\n                                    queryState={queryState}\n                                    trackClick={searchActions.trackClick}\n                                  />\n                                </div>\n                                <div className=\"results__footer\">\n                                  <Pagination\n                                    {...searchResults.pageState}\n                                    onPage={searchActions.updatePage}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <Popup\n                        position=\"top right\"\n                        trigger={\n                          <button type=\"button\" className=\"btn btn-ghostLogin\">\n                            {\" \"}\n                            Request New Term{\" \"}\n                          </button>\n                        }\n                        modal\n                      >\n                        {close => (\n                          <div className=\"modal\" align=\"center\">\n                            <a className=\"close\" onClick={close}>\n                              &times;\n                            </a>\n                            <div className=\"header\"> Enter Term </div>\n                            <form>\n                              <input\n                                id=\"requestedTerm\"\n                                name=\"requestedTerm\"\n                                type=\"text\"\n                                className=\"inputForm\"\n                              />\n                            </form>\n                            <div className=\"actions\">\n                              <button\n                                className=\"btn btn-ghost\"\n                                type=\"button\"\n                                onClick={() => {\n                                  this.requestNewTerm();\n                                  close();\n                                }}\n                              >\n                                {\" \"}\n                                Confirm Request{\" \"}\n                              </button>\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-full\"\n                                onClick={() => {\n                                  console.log(\"modal closed \");\n                                  close();\n                                }}\n                              >\n                                Close\n                              </button>\n                            </div>\n                          </div>\n                        )}\n                      </Popup>\n                      <div className=\"site-background\">\n                        <div />\n                        <a href=\"/TMSD/#/directory\" className=\"directory\">\n                          {\" \"}\n                          <p> Directory of Terms </p>\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                </Search>\n              )}\n            </Route>\n          </ScrollToTop>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  header: {\n    width: \"75vw\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    textAlign: \"center\"\n  },\n  headerText: {\n    textAlign: \"center\"\n  },\n  graph: {\n    width: \"90vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\"\n  },\n  definition: {\n    width: \"60vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\",\n    marginBottom: \"40px\"\n  },\n  defText: {\n    textAlign: \"left\",\n    color: \"black\"\n  },\n  adminButton: {\n    float: \"right\",\n    margin: \"10px\"\n  }\n};\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport createDatabaseClient from \"./Database\";\nimport queryString from \"query-string\";\nimport packageIcon from \"./icons/icon-package.svg\";\nconst databaseClient = createDatabaseClient();\n\nexport default class Directory extends Component {\n  constructor(props) {\n    super(props);\n    // this.state.allTerms is empty for now until loaded in componentDidMount()\n    this.state = {\n      allTerms: []\n    };\n  }\n\n  componentDidMount() {\n    // called once when you go to this page\n    databaseClient.getAllTerms().then(docs => {\n      // get all terms from databaseClient and then set this.state.allTerms to be the list of terms\n      this.setState({\n        allTerms: docs\n      });\n    });\n  }\n\n  TermList = () => {\n    const terms = this.state.allTerms;\n    //<p style={{textAlign:\"center\"}}> {term} </p>\n    const listItems = terms.map(term => (\n      <li>\n        <a href={\"/TMSD/#/\" + 'v=\"' + term + '\"'}>{term}</a>\n      </li>\n    ));\n    return <ul>{listItems}</ul>;\n  };\n\n  render() {\n    // renders every time this.state is updated\n    console.log(this.state.allTerms); // see this in browser's console (Right click => Inspect element => Console)\n    return (\n      // <div className=\"site-background\">\n      //   <h1 className=\"tmsd__title\" style={{textAlign:\"center\"}}>\n      //     Directory of Terms\n      //   </h1>\n      //   <this.TermList />\n      // </div>\n\n      <div align=\"center\" style={styles.divStyle}>\n        <div className=\"tmsd__headings\">\n          <div className=\"tmsd__icon-wrap\">\n            <img src={packageIcon} alt=\"Dinosaur Icon\" className=\"tmsd__icon\" />\n          </div>\n          <h1 className=\"tmsd__title\">Time Machine Space Dinosaur</h1>\n          <h4 className=\"tmsd__title\" style={{ textAlign: \"center\" }}>\n            Directory of Terms\n          </h4>\n          <this.TermList />\n        </div>\n      </div>\n      // stuff here TODO\n      // render this.state.allTerms in a list\n      // see https://reactjs.org/docs/lists-and-keys.html\n    );\n  }\n}\n\nconst styles = {\n  header: {\n    width: \"75vw\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    textAlign: \"center\"\n  },\n  headerText: {\n    textAlign: \"center\"\n  },\n  graph: {\n    width: \"90vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\"\n  },\n  definition: {\n    width: \"60vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\",\n    marginBottom: \"40px\"\n  },\n  defText: {\n    textAlign: \"left\",\n    color: \"black\"\n  }\n};\n","import React from \"react\";\nimport Select from \"react-select\";\nimport createDatabaseClient from \"./Database\";\nimport firebase from \"firebase\";\nimport packageIcon from \"./icons/icon-package.svg\";\n/*\nhttps://jedwatson.github.io/react-select/\n\nhttps://react-select.com/props\n*/\n\nvar options = [];\n\nconst databaseClient = createDatabaseClient();\n\nclass AdminPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: options,\n      isLoggedIn: false\n    };\n  }\n\n  componentWillMount() {\n    this.updateOptions();\n\n    firebase.auth().onAuthStateChanged(\n      function(user) {\n        if (user) {\n          this.setState({\n            isLoggedIn: true\n          });\n        }\n      }.bind(this)\n    );\n\n    console.log(\"First check \" + this.state.user);\n  }\n\n  checkLoginStatus() {\n    return new Promise((resolve, reject) => {\n      const check = firebase.auth().onAuthStateChanged(function(user) {\n        resolve(user);\n      }, reject(\"api failed\"));\n    });\n  }\n\n  addToDb = () => {\n    let termsRaw = this.state.selectedOption;\n\n    if (termsRaw == null) {\n      alert(\"No items selected to be added...\");\n    } else {\n      let termsToAdd = [];\n      for (let i = 0; i < termsRaw.length; i++) {\n        termsToAdd[i] = termsRaw[i].value;\n      }\n\n      let termsJson = {\n        \"new-terms\": termsToAdd\n      };\n\n      const http = new XMLHttpRequest();\n      const url = \"https://tmsd-scraper.herokuapp.com/add\";\n      http.open(\"POST\", url);\n      http.setRequestHeader(\"Content-Type\", \"application/json\");\n      http.send(JSON.stringify(termsJson));\n      http.onreadystatechange = e => {\n        console.log(http.responseText);\n      };\n\n      //console.log(termsJson)\n      this.deleteRequests(termsRaw);\n\n      alert(\"Added...\");\n    }\n  };\n\n  isUserLoggedIn = async () => {\n    try {\n      let user = await this.checkLoginStatus();\n      console.log(\"try | react side: \", user);\n      if (user) {\n        this.setState({\n          user: user\n        });\n      }\n    } catch (err) {\n      console.log(\"catch | error: \", err);\n    }\n  };\n\n  updateOptions = () => {\n    databaseClient.changeCollection(\"requestedTerms\");\n    let promiseRequestedTerms = databaseClient.getAllTerms();\n    console.log(promiseRequestedTerms);\n    promiseRequestedTerms.then(listofTerms => {\n      let terms = [];\n      for (let i = 0; i < listofTerms.length; i++) {\n        const newEntry = { value: listofTerms[i], label: listofTerms[i] };\n        terms.push(newEntry);\n      }\n\n      //Options is not being updated here, and no way to force it\n      //options = dict;\n      this.setState({ options: terms });\n\n      console.log(listofTerms);\n      console.log(options);\n    });\n  };\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n    console.log(this.state.selectedOption);\n  };\n\n  deleteRequests = termsToDelete => {\n    databaseClient.changeCollection(\"requestedTerms\");\n\n    console.log(this.state);\n    termsToDelete = this.state.selectedOption;\n\n    if (termsToDelete) {\n      for (let i = 0; i < termsToDelete.length; i++) {\n        databaseClient.collection\n          .doc(termsToDelete[i].value)\n          .delete()\n          .then(function() {\n            console.log(\"Document successfully deleted!\");\n          })\n          .catch(function(error) {\n            console.error(\"Error removing document: \", error);\n          });\n      }\n\n      this.updateOptions();\n      this.setState({\n        selectedOption: null\n      });\n    }\n  };\n\n  logout() {\n    firebase.auth().signOut();\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n    //var user = firebase.auth().currentUser;\n    console.log(\"User \" + this.state.user);\n    if (this.state.isLoggedIn) {\n      return (\n        <div>\n          <a\n            className=\"btn btn-ghostLogin\"\n            href=\"/TMSD/#/\"\n            style={styles.adminButton}\n            onClick={this.logout}\n          >\n            {\" \"}\n            Logout{\" \"}\n          </a>\n          <div style={styles.header}>\n            <h1 style={styles.headerText} className=\"term-title\">\n              Admin Dashboard\n            </h1>\n            <hr />\n          </div>\n          <div className=\"admin-dashboard\">\n            <div className=\"pending-requests graph\" style={styles.requests}>\n              <h3>Pending Requests</h3>\n              <p>Select requested terms to add or delete to the database</p>\n              <Select\n                value={this.state.selectedOption}\n                onChange={this.handleChange}\n                options={this.state.options}\n                isMulti={true}\n                closeMenuOnSelect={false}\n              />\n              <a className=\"btn btn-ghost\" onClick={this.addToDb}>\n                {\" \"}\n                Add to Database{\" \"}\n              </a>\n              <a className=\"btn btn-full\" onClick={this.deleteRequests}>\n                {\" \"}\n                Delete Requests{\" \"}\n              </a>\n            </div>\n            <div className=\"stats\" />\n            <div className=\"actions\" />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div align=\"center\" style={styles.divStyle}>\n          <div className=\"tmsd__headings\">\n            <div className=\"tmsd__icon-wrap\">\n              <img\n                src={packageIcon}\n                alt=\"Dinosaur Icon\"\n                className=\"tmsd__icon\"\n              />\n            </div>\n            <h1 className=\"tmsd__title\">Time Machine Space Dinosaur</h1>\n          </div>\n          <p>\n            You are not logged in. Please use the buttons below to redirect.\n          </p>\n          <a className=\"btn btn-ghost\" href=\"/TMSD/#\">\n            Redirect to TMSD Home\n          </a>\n          <a className=\"btn btn-ghost\" href=\"/TMSD/#/adminLogin\">\n            Redirect to TMSD Admin Login\n          </a>\n        </div>\n      );\n    }\n  }\n}\n\nconst styles = {\n  header: {\n    width: \"75vw\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    textAlign: \"center\"\n  },\n  headerText: {\n    textAlign: \"center\"\n  },\n  requests: {\n    width: \"90vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\"\n  },\n  definition: {\n    width: \"60vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\",\n    marginBottom: \"40px\"\n  },\n  defText: {\n    textAlign: \"left\",\n    color: \"black\"\n  },\n  divStyle: {\n    margin: \"auto\",\n    marginTop: \"10%\",\n    height: \"100%\"\n  },\n  adminButton: {\n    float: \"right\",\n    margin: \"10px\",\n    marginTop: \"-20px\"\n  }\n};\n\nexport default AdminPage;\n","import React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport packageIcon from \"./icons/icon-package.svg\";\n\nclass AdminLogin extends React.Component {\n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD\n    ],\n\n    signInSuccessUrl: \"/TMSD/#/admin\",\n\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => true\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentWillMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({ isSignedIn: !!user }));\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div align=\"center\" style={styles.divStyle}>\n          <div className=\"tmsd__headings\">\n            <div className=\"tmsd__icon-wrap\">\n              <img\n                src={packageIcon}\n                alt=\"Dinosaur Icon\"\n                className=\"tmsd__icon\"\n              />\n            </div>\n            <h1 className=\"tmsd__title\">Time Machine Space Dinosaur</h1>\n          </div>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n      );\n    } else {\n      window.location.href = \"/TMSD/#/admin\";\n      return (\n        <div align=\"center\" style={styles.divStyle}>\n          <div className=\"tmsd__headings\">\n            <div className=\"tmsd__icon-wrap\">\n              <img\n                src={packageIcon}\n                alt=\"Dinosaur Icon\"\n                className=\"tmsd__icon\"\n              />\n            </div>\n            <h1 className=\"tmsd__title\">Time Machine Space Dinosaur</h1>\n          </div>\n          <p>Sign in successful! Redirecting...</p>\n        </div>\n      );\n    }\n  }\n}\n\nconst styles = {\n  header: {\n    width: \"75vw\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    textAlign: \"center\"\n  },\n  headerText: {\n    textAlign: \"center\"\n  },\n  requests: {\n    width: \"90vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\"\n  },\n  definition: {\n    width: \"60vw\",\n    height: \"100%\",\n    margin: \"auto\",\n    marginTop: \"40px\",\n    marginBottom: \"40px\"\n  },\n  defText: {\n    textAlign: \"left\",\n    color: \"black\"\n  },\n  divStyle: {\n    margin: \"auto\",\n    marginTop: \"10%\",\n    height: \"100%\"\n  }\n};\n\nexport default AdminLogin;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport TermPage from \"./TermPage\";\nimport MainPage from \"./MainPage\";\nimport Directory from \"./Directory\";\nimport AdminPage from \"./AdminPage\";\nimport AdminLogin from \"./AdminLogin\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { redirect: true };\n  }\n\n  render() {\n    return (\n      <Router basename=\"/TMSD\">\n        <div>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route path=\"/v=:id\" component={TermPage} />\n          <Route path=\"/directory\" component={Directory} />\n          <Route path=\"/admin\" component={AdminPage} />\n          <Route path=\"/adminlogin\" component={AdminLogin} />\n        </div>\n      </Router>\n    );\n  }\n}\n\n/*\nclass App extends Component {\n  render() {\n    return <TermPage />;\n  }\n}*/\n\n/*\nclass App extends Component {\n  render() {\n    return <AdminPage />;\n  }\n}\n*/\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"./styles/tmsdStyles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"app-container\"));\n//registerServiceWorker();\n"],"sourceRoot":""}